- name: replace /etc/apt/sources.list
  become: yes
  copy:
    dest: /etc/apt/sources.list
    content: |
      deb http://ftp.iij.ad.jp/pub/linux/ubuntu/archive/ {{ ansible_lsb.codename }} main restricted universe
      deb http://ftp.iij.ad.jp/pub/linux/ubuntu/archive/ {{ ansible_lsb.codename }}-updates main restricted universe
      deb http://ftp.iij.ad.jp/pub/linux/ubuntu/archive/ {{ ansible_lsb.codename }}-security main restricted universe

- name: update APT cache
  become: yes
  apt:
    update_cache: yes

- name: install packages
  become: yes
  apt:
    name:
      - vim
      - htop
      - git

- name: check if the host is running on Hyper-V
  command: /usr/bin/systemd-detect-virt
  register: virt
  check_mode: no
  changed_when: false

- debug: var=virt.stdout

# hv-kvp-daemon や kv-vss-daemon などをインストールする
# もっと最適化されたものを使いたい場合は linux-virtual, linux-cloud-tools-virtual を使うとモジュール類が削減できるが、そこまで頑張らなくてもよい
# いつからか linux-image-virtual フレーバーは提供されず generic を使うことになったので、カーネルは変わらない
- name: install hv-kvp for Hyper-V
  become: yes
  apt:
    name: 'linux-cloud-tools-generic'
  when: virt.stdout == 'microsoft'

- name: uninstall packages
  become: yes
  apt:
    name:
      - snapd
      - nano
      - unattended-upgrades
    state: absent
    purge: yes
    autoremove: yes

- name: upgrade all packages
  become: yes
  apt:
    upgrade: dist
  when: "'GITHUB_ACTIONS' not in ansible_env"

- name: set locale
  become: yes
  command: localectl set-locale LANG=en_US.UTF-8

- name: set timezone
  become: yes
  timezone:
    name: Etc/UTC

- name: allow users in sudo group to use sudo command without password
  become: yes
  lineinfile:
    path: /etc/sudoers
    regexp: '^%sudo\s+ALL=\(ALL:ALL\) (NOPASSWD: )?ALL'
    line: '%sudo  ALL=(ALL:ALL) NOPASSWD: ALL'
    validate: /usr/sbin/visudo -cf %s

- name: create workspace
  file:
    path: '{{ ansible_user_dir }}/workspace'
    state: directory

- name: clone arosh/dotfiles
  git:
    repo: https://github.com/arosh/dotfiles.git
    dest: '{{ ansible_user_dir }}/workspace/github.com/arosh/dotfiles'

- name: link .vimrc
  file:
    path: '{{ ansible_user_dir }}/.vimrc'
    state: link
    src: 'workspace/github.com/arosh/dotfiles/.vimrc.tiny'

- name: link dotfiles
  file:
    path: '{{ ansible_user_dir }}/{{ item }}'
    state: link
    src: 'workspace/github.com/arosh/dotfiles/{{ item }}'
  loop:
    - .digrc
    - .gitconfig
    - .gitignore
    - .zlogin
    - .zpreztorc
    - .zshrc
    - .zshrc.vcs_info
